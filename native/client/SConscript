# Copyright 2020 Kaloian Manassiev
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
# associated documentation files (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge, publish, distribute,
# sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or
# substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
# NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

Import('native_env')
arm_env = native_env.Clone()
arm_env.Append(LIBPATH=[Dir('boost_for_raspberrypi/lib')])
arm_env.Append(CPPPATH=[Dir('boost_for_raspberrypi/include')])

arm_env['TARGET_ARCH'] = 'arm'

# Change the compiler/liker to be that for ARM
arm_cross_compiler = 'arm-linux-gnueabihf-'
for (tool, name) in [
    ('CXX', 'g++'),
]:
    arm_env[tool] = arm_cross_compiler + name

# Compile the Boost libraries for Raspberry Pi
boost_for_raspberrypi = arm_env.Command(
    arm_env.Dir('boost_for_raspberrypi').abspath, None, [
        Mkdir(arm_env.Dir('.')),
        str(arm_env.File('make_boost_for_raspberrypi.sh')) + ' ' +
        arm_env.Dir('boost_for_raspberrypi').abspath + ' ' +
        ARGUMENTS.get('BOOST_ARCHIVE', '1.74.0') + ' ' + ' > boost_for_raspberrypi_build.log'
    ])

# Compile the Raspberry Pi client
client = arm_env.Program(target='client', source=[
    'client_main.cpp',
    'tun_ctl.cpp',
], LIBS='boost_program_options')
Depends(client, boost_for_raspberrypi)
