# Copyright 2020 Kaloian Manassiev
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
# associated documentation files (the "Software"), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge, publish, distribute,
# sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all copies or
# substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
# NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import os

Import('native_env')
env = native_env.Clone()
env.Append(LIBPATH=[Dir('../boost_for_client/lib'), Dir('../common')])
env.Append(CPPPATH=[Dir('../boost_for_client/include'), Dir('../common')])

# Change the compiler/liker to match the target architecture
for (tool, name) in [
    ('CXX', 'g++'),
]:
    env[tool] = env['CLIENT_COMPILER_PREFIX'] + name

# Compile the Raspberry Pi client
client = env.Program(target='client', source=[
    'client_main.cpp',
    'context.cpp',
    'tun_ctl.cpp',
], LIBS=['boost_program_options', 'common', 'pthread'])
env.Install(os.path.join(Dir('#').abspath, 'install/client'), [client])
